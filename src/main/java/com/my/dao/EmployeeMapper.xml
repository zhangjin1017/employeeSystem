<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.my.pojo.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="depart_id" jdbcType="INTEGER" property="departId" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="state_id" jdbcType="INTEGER" property="stateId" />
    <result column="intime" jdbcType="DATE" property="intime" />
    <result column="outtime" jdbcType="DATE" property="outtime" />
    <result column="kpi_id" jdbcType="INTEGER" property="kpiId" />
    <result column="infor_id" jdbcType="INTEGER" property="inforId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, work_id, name, password, depart_id, position, state_id, intime, outtime, 
    kpi_id, infor_id
  </sql>
  <select id="selectByExample" parameterType="com.my.pojo.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.my.pojo.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.pojo.Employee">
    insert into employee (emp_id, work_id, name, 
      password, depart_id, position, 
      state_id, intime, outtime, 
      kpi_id, infor_id)
    values (#{empId,jdbcType=INTEGER}, #{workId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{stateId,jdbcType=INTEGER}, #{intime,jdbcType=DATE}, #{outtime,jdbcType=DATE}, 
      #{kpiId,jdbcType=INTEGER}, #{inforId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.my.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="workId != null">
        work_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="departId != null">
        depart_id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="stateId != null">
        state_id,
      </if>
      <if test="intime != null">
        intime,
      </if>
      <if test="outtime != null">
        outtime,
      </if>
      <if test="kpiId != null">
        kpi_id,
      </if>
      <if test="inforId != null">
        infor_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        #{departId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="stateId != null">
        #{stateId,jdbcType=INTEGER},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=DATE},
      </if>
      <if test="outtime != null">
        #{outtime,jdbcType=DATE},
      </if>
      <if test="kpiId != null">
        #{kpiId,jdbcType=INTEGER},
      </if>
      <if test="inforId != null">
        #{inforId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.pojo.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.departId != null">
        depart_id = #{record.departId,jdbcType=INTEGER},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.stateId != null">
        state_id = #{record.stateId,jdbcType=INTEGER},
      </if>
      <if test="record.intime != null">
        intime = #{record.intime,jdbcType=DATE},
      </if>
      <if test="record.outtime != null">
        outtime = #{record.outtime,jdbcType=DATE},
      </if>
      <if test="record.kpiId != null">
        kpi_id = #{record.kpiId,jdbcType=INTEGER},
      </if>
      <if test="record.inforId != null">
        infor_id = #{record.inforId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set emp_id = #{record.empId,jdbcType=INTEGER},
      work_id = #{record.workId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      depart_id = #{record.departId,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      state_id = #{record.stateId,jdbcType=INTEGER},
      intime = #{record.intime,jdbcType=DATE},
      outtime = #{record.outtime,jdbcType=DATE},
      kpi_id = #{record.kpiId,jdbcType=INTEGER},
      infor_id = #{record.inforId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.pojo.Employee">
    update employee
    <set>
      <if test="workId != null">
        work_id = #{workId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="departId != null">
        depart_id = #{departId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="stateId != null">
        state_id = #{stateId,jdbcType=INTEGER},
      </if>
      <if test="intime != null">
        intime = #{intime,jdbcType=DATE},
      </if>
      <if test="outtime != null">
        outtime = #{outtime,jdbcType=DATE},
      </if>
      <if test="kpiId != null">
        kpi_id = #{kpiId,jdbcType=INTEGER},
      </if>
      <if test="inforId != null">
        infor_id = #{inforId,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.pojo.Employee">
    update employee
    set work_id = #{workId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      depart_id = #{departId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      state_id = #{stateId,jdbcType=INTEGER},
      intime = #{intime,jdbcType=DATE},
      outtime = #{outtime,jdbcType=DATE},
      kpi_id = #{kpiId,jdbcType=INTEGER},
      infor_id = #{inforId,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>